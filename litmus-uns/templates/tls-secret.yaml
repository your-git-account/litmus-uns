{{- if .Values.luns.createTlsSecret }}
{{- $secretName := "luns-default-tls" }}
{{- $ca := genCA (printf "luns-%s-ca" (randAlphaNum 5)) 3650 }}
{{- $fullname := .Chart.Name }}
{{- $ipList := .Values.luns.tls.ipList | default list }}
{{- $altNames := .Values.luns.tls.altNames | default list }}
{{- if not (has .Values.ingress.host $altNames) }}
{{- $altNames = append $altNames .Values.ingress.host }}
{{- end }}
{{- $sslTtl := .Values.luns.tls.ttl | default 390 list }}
{{- $cert := genSignedCert $fullname $ipList $altNames $sslTtl $ca }}
{{- $tlsCrt := $cert.Cert | b64enc }}
{{- $tlsKey := $cert.Key | b64enc }}
{{- $caCrt := $ca.Cert | b64enc }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "litmus-uns.labels" . | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" $) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  {{- $old_sec := lookup "v1" "Secret" .Release.Namespace $secretName }}
  {{- if or (not $old_sec) (not $old_sec.data) }}
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
  ca.crt: {{ $ca.Cert | b64enc }}
  {{ else }}
  tls.crt: {{ index $old_sec.data "tls.crt" }}
  tls.key: {{ index $old_sec.data "tls.key" }}
  ca.crt: {{ index $old_sec.data "ca.crt" }}
  {{ end }}
{{- end }}
